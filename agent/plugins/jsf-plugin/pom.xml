<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <parent>
    <groupId>org.glowroot</groupId>
    <artifactId>glowroot-parent</artifactId>
    <version>0.9.23-SNAPSHOT</version>
    <relativePath>../../..</relativePath>
  </parent>

  <artifactId>glowroot-agent-jsf-plugin</artifactId>

  <name>Glowroot Agent JSF Plugin</name>
  <description>Glowroot Agent JSF Plugin</description>

  <properties>
    <!-- instrumented libraries -->
    <faces.version>2.2.14</faces.version>
  </properties>

  <dependencies>
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.assertj</groupId>
      <artifactId>assertj-core</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.glowroot</groupId>
      <artifactId>glowroot-agent-it-harness</artifactId>
      <version>${project.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>com.ning</groupId>
      <artifactId>async-http-client</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.apache.tomcat.embed</groupId>
      <artifactId>tomcat-embed-core</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.apache.tomcat.embed</groupId>
      <artifactId>tomcat-embed-jasper</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.apache.tomcat.embed</groupId>
      <artifactId>tomcat-embed-logging-juli</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <!-- this is needed because logback classic 1.1.10+ contains
        META-INF/services/javax.servlet.ServletContainerInitializer which causes issues when running
        tests with embedded tomcat inside JavaagentContainer because logback is loaded in the
        bootstrap class loader (see JavaagentContainer.java) and so
        LogbackServletContainerInitializer is loaded in the bootstrap class loader which then
        looks for ServletContainerInitializer in the bootstrap class loader, but it is not, and
        adding tomcat-embed-core (which has ServletContainerInitializer) to the bootstrap class
        loader causes NullPointerException in org.apache.catalina.startup.ContextConfig

        to get around this problem, javax.servlet-api artifact is included, and put in the bootstrap
        class loader (see JavaagentContainer.java) so that logback's ServletContainerInitializer
        can load in the the bootstrap class loader successfully
      -->
      <groupId>javax.servlet</groupId>
      <artifactId>javax.servlet-api</artifactId>
      <!-- Tomcat 7 (above) uses Servlet API 3.0 -->
      <version>3.0.1</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>com.sun.faces</groupId>
      <artifactId>jsf-api</artifactId>
      <version>${faces.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>com.sun.faces</groupId>
      <artifactId>jsf-impl</artifactId>
      <version>${faces.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <!-- servlet plugin is included to capture transactions -->
      <groupId>org.glowroot</groupId>
      <artifactId>glowroot-agent-servlet-plugin</artifactId>
      <version>${project.version}</version>
      <scope>test</scope>
    </dependency>
  </dependencies>

  <build>
    <plugins>
      <plugin>
        <artifactId>maven-failsafe-plugin</artifactId>
        <executions>
          <execution>
            <goals>
              <goal>integration-test</goal>
              <goal>verify</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
    </plugins>
    <pluginManagement>
      <plugins>
        <plugin>
          <!-- this is just so eclipse will use Java 7 for this module, since Java 7 is needed for
            running tests in eclipse because the tests depend on servlet plugin which also uses
            Java 7 inside eclipse since some of the servlet plugin's tests depend on the executor
            plugin which targets Java 7 for default-testCompile just so eclipse will use Java 7 for
            that module, in order to run that module's own ForkJoinPool tests -->
          <artifactId>maven-compiler-plugin</artifactId>
          <executions>
            <execution>
              <id>default-testCompile</id>
              <configuration>
                <source>1.7</source>
                <target>1.7</target>
              </configuration>
            </execution>
          </executions>
        </plugin>
      </plugins>
    </pluginManagement>
  </build>

  <profiles>
    <profile>
      <id>force-java6</id>
      <build>
        <pluginManagement>
          <plugins>
            <plugin>
              <artifactId>maven-compiler-plugin</artifactId>
              <executions>
                <execution>
                  <id>default-testCompile</id>
                  <configuration>
                    <source>1.6</source>
                    <target>1.6</target>
                  </configuration>
                </execution>
              </executions>
            </plugin>
          </plugins>
        </pluginManagement>
      </build>
    </profile>
  </profiles>
</project>
