<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <parent>
    <groupId>org.glowroot</groupId>
    <artifactId>glowroot-parent</artifactId>
    <version>0.14.0-beta.4-SNAPSHOT</version>
    <relativePath>../../..</relativePath>
  </parent>

  <artifactId>glowroot-agent-http-client-plugin</artifactId>

  <name>Glowroot Agent Http Client Plugin</name>
  <description>Glowroot Agent Http Client Plugin</description>

  <properties>
    <!-- instrumented libraries -->
    <apache.httpclient.version>4.5.11</apache.httpclient.version>
    <apache.httpasyncclient.version>4.1.4</apache.httpasyncclient.version>
    <apache.httpclient3x.version>3.1</apache.httpclient3x.version>
    <apache.httpcore.version>4.4.13</apache.httpcore.version>
    <asynchttpclient1x.version>1.9.40</asynchttpclient1x.version>
    <asynchttpclient2x.version>2.10.4</asynchttpclient2x.version>
    <wiremock.version>2.26.0</wiremock.version>
    <okhttpclient.version>4.3.1</okhttpclient.version>
    <okhttpclient2x.version>2.7.5</okhttpclient2x.version>
    <cxf.version>3.4.5</cxf.version>
    <!-- Spring 5+ requires Java 8+ -->
    <spring.version>4.3.26.RELEASE</spring.version>
    <axis.version>1.4</axis.version>
  </properties>

  <dependencies>
    <dependency>
      <groupId>org.glowroot</groupId>
      <artifactId>glowroot-agent-plugin-api</artifactId>
      <version>${project.version}</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.apache.httpcomponents</groupId>
      <artifactId>httpclient</artifactId>
      <version>${apache.httpclient.version}</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.apache.httpcomponents</groupId>
      <artifactId>httpasyncclient</artifactId>
      <version>${apache.httpasyncclient.version}</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.apache.httpcomponents</groupId>
      <artifactId>httpcore</artifactId>
      <version>${apache.httpcore.version}</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>commons-httpclient</groupId>
      <artifactId>commons-httpclient</artifactId>
      <version>${apache.httpclient3x.version}</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>com.ning</groupId>
      <artifactId>async-http-client</artifactId>
      <version>${asynchttpclient1x.version}</version> <!-- $NO-MVN-MAN-VER$ -->
      <scope>provided</scope>
      <exclusions>
        <exclusion>
          <groupId>io.netty</groupId>
          <artifactId>netty</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>org.asynchttpclient</groupId>
      <artifactId>async-http-client</artifactId>
      <version>${asynchttpclient2x.version}</version>
      <scope>provided</scope>
      <exclusions>
        <exclusion>
          <groupId>org.asynchttpclient</groupId>
          <artifactId>async-http-client-netty-utils</artifactId>
        </exclusion>
        <exclusion>
          <groupId>io.netty</groupId>
          <artifactId>netty-common</artifactId>
        </exclusion>
        <exclusion>
          <groupId>io.netty</groupId>
          <artifactId>netty-resolver</artifactId>
        </exclusion>
        <exclusion>
          <groupId>io.netty</groupId>
          <artifactId>netty-transport</artifactId>
        </exclusion>
        <exclusion>
          <groupId>io.netty</groupId>
          <artifactId>netty-buffer</artifactId>
        </exclusion>
        <exclusion>
          <groupId>io.netty</groupId>
          <artifactId>netty-codec-http</artifactId>
        </exclusion>
        <exclusion>
          <groupId>io.netty</groupId>
          <artifactId>netty-handler</artifactId>
        </exclusion>
        <exclusion>
          <groupId>io.netty</groupId>
          <artifactId>netty-codec-socks</artifactId>
        </exclusion>
        <exclusion>
          <groupId>io.netty</groupId>
          <artifactId>netty-handler-proxy</artifactId>
        </exclusion>
        <exclusion>
          <groupId>io.netty</groupId>
          <artifactId>netty-transport-native-epoll</artifactId>
        </exclusion>
        <exclusion>
          <groupId>io.netty</groupId>
          <artifactId>netty-resolver-dns</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>com.squareup.okhttp3</groupId>
      <artifactId>okhttp</artifactId>
      <version>${okhttpclient.version}</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>com.squareup.okhttp</groupId>
      <artifactId>okhttp</artifactId>
      <version>${okhttpclient2x.version}</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>axis</groupId>
      <artifactId>axis</artifactId>
      <version>1.4</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter-api</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.assertj</groupId>
      <artifactId>assertj-core</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>com.google.guava</groupId>
      <artifactId>guava</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.apache.cxf</groupId>
      <artifactId>cxf-rt-bindings-soap</artifactId>
      <version>${cxf.version}</version>
      <scope>test</scope>
      <exclusions>
        <exclusion>
          <!-- new jaxb runtime is included below -->
          <groupId>com.sun.xml.bind</groupId>
          <artifactId>jaxb-impl</artifactId>
        </exclusion>
        <exclusion>
          <!-- new jaxb runtime is included below -->
          <groupId>com.sun.xml.bind</groupId>
          <artifactId>jaxb-core</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>org.apache.cxf</groupId>
      <artifactId>cxf-rt-frontend-jaxws</artifactId>
      <version>${cxf.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.apache.cxf</groupId>
      <artifactId>cxf-rt-transports-http</artifactId>
      <version>${cxf.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.apache.cxf</groupId>
      <artifactId>cxf-rt-transports-http-jetty</artifactId>
      <version>${cxf.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-web</artifactId>
      <version>${spring.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <!-- axis dependency -->
      <groupId>javax.xml.rpc</groupId>
      <artifactId>javax.xml.rpc-api</artifactId>
      <version>1.1.2</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <!-- axis dependency -->
      <groupId>commons-discovery</groupId>
      <artifactId>commons-discovery</artifactId>
      <version>0.5</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <!-- don't use netty based http server for testing b/c then potential version conflicts -->
      <groupId>org.nanohttpd</groupId>
      <artifactId>nanohttpd</artifactId>
      <version>2.3.1</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <!-- executor plugin is included to test suppression of "wait for future" timer and also to test
        that it has no other adverse effects -->
      <groupId>org.glowroot</groupId>
      <artifactId>glowroot-agent-executor-plugin</artifactId>
      <version>${project.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <!-- wiremock-standalone is needed in order to compile against wiremock.org.apache.http.HttpRequest -->
      <groupId>com.github.tomakehurst</groupId>
      <artifactId>wiremock-standalone</artifactId>
      <version>${wiremock.version}</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <!-- this is needed for running tests on Java 9+ -->
      <groupId>javax.xml.bind</groupId>
      <artifactId>jaxb-api</artifactId>
      <version>2.3.1</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <!-- this is needed for running tests on Java 9+ -->
      <groupId>javax.xml.ws</groupId>
      <artifactId>jaxws-api</artifactId>
      <version>2.3.1</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <!-- this is needed for running tests on Java 9+ -->
      <groupId>javax.jws</groupId>
      <artifactId>jsr181-api</artifactId>
      <version>1.0-MR1</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <!-- this is needed for running tests on Java 9+ -->
      <groupId>org.glassfish.jaxb</groupId>
      <artifactId>jaxb-runtime</artifactId>
      <version>2.3.4</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <!-- this is needed for running tests on Java 9+ -->
      <groupId>com.sun.activation</groupId>
      <artifactId>javax.activation</artifactId>
      <version>1.2.0</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <!-- this is to resolve maven enforcer RequireUpperBoundDeps error -->
      <groupId>org.ow2.asm</groupId>
      <artifactId>asm</artifactId>
      <version>9.4</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <!-- this is to resolve maven enforcer RequireUpperBoundDeps error -->
      <groupId>org.jetbrains.kotlin</groupId>
      <artifactId>kotlin-stdlib-common</artifactId>
      <version>1.3.61</version>
      <scope>test</scope>
    </dependency>
  </dependencies>

  <build>
    <plugins>
      <plugin>
        <artifactId>maven-failsafe-plugin</artifactId>
        <executions>
          <execution>
            <goals>
              <goal>integration-test</goal>
              <goal>verify</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>

  <profiles>
    <profile>
      <id>auto-activated-test-unshaded</id>
      <activation>
        <property>
          <name>!glowroot.test.shaded</name>
        </property>
      </activation>
      <dependencies>
        <dependency>
          <groupId>org.glowroot</groupId>
          <artifactId>glowroot-agent-it-harness-unshaded</artifactId>
          <version>${project.version}</version>
          <scope>test</scope>
        </dependency>
      </dependencies>
    </profile>
    <profile>
      <id>auto-activated-test-shaded</id>
      <activation>
        <property>
          <name>glowroot.test.shaded</name>
        </property>
      </activation>
      <dependencies>
        <dependency>
          <groupId>org.glowroot</groupId>
          <artifactId>glowroot-agent-it-harness</artifactId>
          <version>${project.version}</version>
          <scope>test</scope>
          <exclusions>
            <exclusion>
              <!-- exclusion is needed due to https://issues.apache.org/jira/browse/MSHADE-206 -->
              <groupId>org.glowroot</groupId>
              <artifactId>glowroot-agent-it-harness-unshaded</artifactId>
            </exclusion>
            <exclusion>
              <!-- exclusion is needed due to https://issues.apache.org/jira/browse/MSHADE-206 -->
              <groupId>org.glowroot</groupId>
              <artifactId>glowroot-agent-core</artifactId>
            </exclusion>
          </exclusions>
        </dependency>
      </dependencies>
    </profile>
    <profile>
      <id>async-http-client-2.x</id>
      <properties>
        <asynchttpclient2x.version>2.5.4</asynchttpclient2x.version>
      </properties>
      <dependencies>
        <dependency>
          <!-- need to override already included dependency without the exclusions -->
          <groupId>org.asynchttpclient</groupId>
          <artifactId>async-http-client</artifactId>
          <version>${asynchttpclient2x.version}</version>
          <scope>provided</scope>
        </dependency>
      </dependencies>
      <build>
        <plugins>
          <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>build-helper-maven-plugin</artifactId>
            <executions>
              <execution>
                <phase>generate-test-sources</phase>
                <goals>
                  <goal>add-test-source</goal>
                </goals>
                <configuration>
                  <sources>
                    <source>src/test/async-http-client-2.x/java</source>
                  </sources>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <id>async-http-client-1.x</id>
      <dependencies>
        <dependency>
          <!-- need to override already included dependency without the exclusions -->
          <groupId>com.ning</groupId>
          <artifactId>async-http-client</artifactId>
          <version>${asynchttpclient1x.version}</version>
          <scope>provided</scope>
        </dependency>
      </dependencies>
      <build>
        <plugins>
          <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>build-helper-maven-plugin</artifactId>
            <executions>
              <execution>
                <phase>generate-test-sources</phase>
                <goals>
                  <goal>add-test-source</goal>
                </goals>
                <configuration>
                  <sources>
                    <source>src/test/async-http-client-1.x/java</source>
                  </sources>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <id>apache-httpclient-pre-4.2</id>
      <build>
        <plugins>
          <plugin>
            <artifactId>maven-compiler-plugin</artifactId>
            <configuration>
              <testExcludes>
                <exclude>
                  org/glowroot/agent/plugin/httpclient/ApacheHttpAsyncClientPluginIT.java
                </exclude>
              </testExcludes>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <id>cxf-2.x</id>
      <dependencies>
        <dependency>
          <groupId>org.springframework</groupId>
          <artifactId>spring-web</artifactId>
          <version>2.0.8</version>
          <scope>test</scope>
        </dependency>
        <dependency>
          <groupId>org.apache.cxf</groupId>
          <artifactId>cxf-rt-transports-http-jetty</artifactId>
          <version>${cxf.version}</version>
          <scope>test</scope>
          <exclusions>
            <exclusion>
              <groupId>org.slf4j</groupId>
              <artifactId>slf4j-jdk14</artifactId>
            </exclusion>
          </exclusions>
        </dependency>
      </dependencies>
      <build>
        <plugins>
          <plugin>
            <artifactId>maven-compiler-plugin</artifactId>
            <configuration>
              <testExcludes>
                <exclude>org/glowroot/agent/plugin/httpclient/RestTemplatePluginIT.java</exclude>
              </testExcludes>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>
</project>
